{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\next-project\\\\pages\\\\index.js\";\nimport MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\nimport Head from 'next/head';\nimport { Fragment } from 'react';\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of highly active React meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 13\n  }, this);\n}\n\nexport async function getStaticProps() {\n  /**Function runs during the build(page-loading process) */\n  // fetch data from api\n  const client = await MongoClient.connect('mongodb+srv://chichiboyhere:okutupi@cluster0.wkkq2bj.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    } // revalidate: 10 // for rerendering data\n\n  };\n}\n; // export async function getServerSideProps(context){\n//    /**runs on the server after deployment. This is best suited for server being updated very frequently */\n//    const req = context.req;\n//    const res = context.res;\n//    return{\n//     props:{\n//         meetups: DUMMY_MEETUPS\n//     }\n//    }\n// }\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/USER/Desktop/next-project/pages/index.js"],"names":["MeetupList","MongoClient","Head","Fragment","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,QAAT,CAAmBC,KAAnB,EAAyB;AACrB,sBAAQ,QAAC,QAAD;AAAA,4BACD,QAAC,IAAD;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,eAKD,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YALC;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AASH;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACpC;AACA;AACA,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CAAoB,sGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AACAN,EAAAA,MAAM,CAACO,KAAP;AAEC,SAAO;AACHV,IAAAA,KAAK,EAAC;AACHC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAI;AAC3BC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADa;AAE3BC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFW;AAG3BC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHa;AAI3BC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJuB,OAAJ,CAAlB;AADN,KADH,CASL;;AATK,GAAP;AAWH;AAAA,C,CAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAenB,QAAf","sourcesContent":["import MeetupList from '../components/meetups/MeetupList'\r\nimport { MongoClient } from 'mongodb';\r\nimport Head from 'next/head';\r\nimport { Fragment } from 'react';\r\n\r\nfunction HomePage (props){\r\n    return( <Fragment>\r\n           <Head>\r\n            <title>React Meetups</title>\r\n            <meta name=\"description\" content=\"Browse a huge list of highly active React meetups\" />\r\n           </Head>\r\n           <MeetupList meetups={props.meetups} />\r\n    </Fragment>\r\n       \r\n    );\r\n}\r\n\r\n export async function getStaticProps() {\r\n    /**Function runs during the build(page-loading process) */\r\n    // fetch data from api\r\n    const client = await MongoClient.connect('mongodb+srv://chichiboyhere:okutupi@cluster0.wkkq2bj.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection('meetups');\r\n    const meetups = await meetupsCollection.find().toArray();\r\n    client.close();\r\n\r\n     return {\r\n         props:{\r\n            meetups: meetups.map(meetup =>({\r\n                title: meetup.title,\r\n                address: meetup.address,\r\n                image: meetup.image,\r\n                id: meetup._id.toString()\r\n            }))\r\n       },\r\n       // revalidate: 10 // for rerendering data\r\n    }\r\n };\r\n\r\n// export async function getServerSideProps(context){\r\n//    /**runs on the server after deployment. This is best suited for server being updated very frequently */\r\n//    const req = context.req;\r\n//    const res = context.res;\r\n//    return{\r\n//     props:{\r\n//         meetups: DUMMY_MEETUPS\r\n//     }\r\n//    }\r\n// }\r\nexport default HomePage"]},"metadata":{},"sourceType":"module"}