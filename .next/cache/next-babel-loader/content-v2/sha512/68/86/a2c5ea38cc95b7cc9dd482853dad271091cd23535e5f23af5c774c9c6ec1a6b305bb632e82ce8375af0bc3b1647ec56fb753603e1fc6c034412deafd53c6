{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\next-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient } from \"mongodb\";\n\nfunction MeetupDetail(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/Sanders_theater_2009y.JPG/1280px-Sanders_theater_2009y.JPG\",\n    title: \"Some meet up\",\n    description: \"A place to meet\",\n    address: \"6 lawson. Illinois\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://chichiboyhere:okutupi@cluster0.wkkq2bj.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    //indicates that all the supported paths have been defined\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/Sanders_theater_2009y.JPG/1280px-Sanders_theater_2009y.JPG\",\n        title: \"Some meet up\",\n        description: \"A place to meet\",\n        address: \"6 lawson. Illinois\"\n      }\n    }\n  };\n}\nexport default MeetupDetail;","map":{"version":3,"sources":["C:/Users/USER/Desktop/next-project/pages/[meetupId]/index.js"],"names":["MeetupDetails","MongoClient","MeetupDetail","props","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","meetupData","id","image","title","description","address"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,wCAA1B;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAC,sHADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,WAAW,EAAC,iBAHd;AAIE,IAAA,OAAO,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,sGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AACY;AACjBC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACLoB,MAAAA,UAAU,EAAE;AACVC,QAAAA,EAAE,EAAEL,QADM;AAEVM,QAAAA,KAAK,EACH,sHAHQ;AAIVC,QAAAA,KAAK,EAAE,cAJG;AAKVC,QAAAA,WAAW,EAAE,iBALH;AAMVC,QAAAA,OAAO,EAAE;AANC;AADP;AADF,GAAP;AAYD;AACD,eAAe1B,YAAf","sourcesContent":["import MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nfunction MeetupDetail(props) {\r\n  return (\r\n    <MeetupDetails\r\n      image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/Sanders_theater_2009y.JPG/1280px-Sanders_theater_2009y.JPG\"\r\n      title=\"Some meet up\"\r\n      description=\"A place to meet\"\r\n      address=\"6 lawson. Illinois\"\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://chichiboyhere:okutupi@cluster0.wkkq2bj.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  return {\r\n    fallback: false, //indicates that all the supported paths have been defined\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: meetupId,\r\n        image:\r\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/Sanders_theater_2009y.JPG/1280px-Sanders_theater_2009y.JPG\",\r\n        title: \"Some meet up\",\r\n        description: \"A place to meet\",\r\n        address: \"6 lawson. Illinois\",\r\n      },\r\n    },\r\n  };\r\n}\r\nexport default MeetupDetail;\r\n"]},"metadata":{},"sourceType":"module"}